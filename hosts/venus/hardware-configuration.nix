# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ata_generic" "uhci_hcd" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d4c5202e-0780-4467-8588-fa319f2fb31d";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/95d48b2b-9c25-462b-8fec-a3278817e0af";

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/d4c5202e-0780-4467-8588-fa319f2fb31d";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/d4c5202e-0780-4467-8588-fa319f2fb31d";
      fsType = "btrfs";
      options = [ "subvol=@var_log" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/be6ecf9f-e0d0-4588-9ba5-691b78f0803c";
      fsType = "ext4";
    };

  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/9a85bcdd-adfb-43c0-a06e-c7cbac209966";
      fsType = "btrfs";
    };

  boot.initrd.luks.devices."cryptdata".device = "/dev/disk/by-uuid/3d988f9d-a7e2-4a3e-84d8-555655429e94"; 

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s25.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp16s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
